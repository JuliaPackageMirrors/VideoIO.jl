# Julia wrapper for header: /usr/include/libavutil/opt.h
# Automatically generated using Clang.jl wrap_c, version 0.0.0


function av_find_opt(_obj::Ptr,_name::Union(Ptr,ByteString),_unit::Union(Ptr,ByteString),_mask::Integer,_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    unit = convert(Ptr{Uint8},_unit)
    mask = int32(_mask)
    flags = int32(_flags)
    ccall((:av_find_opt,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint,Cint),obj,name,unit,mask,flags)
end
function av_set_string3(_obj::Ptr,_name::Union(Ptr,ByteString),_val::Union(Ptr,ByteString),_alloc::Integer,_o_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    val = convert(Ptr{Uint8},_val)
    alloc = int32(_alloc)
    o_out = convert(Ptr{Ptr{AVOption}},_o_out)
    ccall((:av_set_string3,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint,Ptr{Ptr{AVOption}}),obj,name,val,alloc,o_out)
end
function av_set_double(_obj::Ptr,_name::Union(Ptr,ByteString),n::Cdouble)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    ccall((:av_set_double,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},Cdouble),obj,name,n)
end
function av_set_q(_obj::Ptr,_name::Union(Ptr,ByteString),n::AVRational)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    ccall((:av_set_q,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},AVRational),obj,name,n)
end
function av_set_int(_obj::Ptr,_name::Union(Ptr,ByteString),n::Int64)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    ccall((:av_set_int,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},Int64),obj,name,n)
end
function av_get_double(_obj::Ptr,_name::Union(Ptr,ByteString),_o_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    o_out = convert(Ptr{Ptr{AVOption}},_o_out)
    ccall((:av_get_double,libavutil),Cdouble,(Ptr{Void},Ptr{Uint8},Ptr{Ptr{AVOption}}),obj,name,o_out)
end
function av_get_q(_obj::Ptr,_name::Union(Ptr,ByteString),_o_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    o_out = convert(Ptr{Ptr{AVOption}},_o_out)
    ccall((:av_get_q,libavutil),AVRational,(Ptr{Void},Ptr{Uint8},Ptr{Ptr{AVOption}}),obj,name,o_out)
end
function av_get_int(_obj::Ptr,_name::Union(Ptr,ByteString),_o_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    o_out = convert(Ptr{Ptr{AVOption}},_o_out)
    ccall((:av_get_int,libavutil),Int64,(Ptr{Void},Ptr{Uint8},Ptr{Ptr{AVOption}}),obj,name,o_out)
end
function av_get_string(_obj::Ptr,_name::Union(Ptr,ByteString),_o_out::Ptr,_buf::Union(Ptr,ByteString),_buf_len::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    o_out = convert(Ptr{Ptr{AVOption}},_o_out)
    buf = convert(Ptr{Uint8},_buf)
    buf_len = int32(_buf_len)
    ccall((:av_get_string,libavutil),Ptr{Uint8},(Ptr{Void},Ptr{Uint8},Ptr{Ptr{AVOption}},Ptr{Uint8},Cint),obj,name,o_out,buf,buf_len)
end
function av_next_option(_obj::Ptr,_last::Ptr)
    obj = convert(Ptr{Void},_obj)
    last = convert(Ptr{AVOption},_last)
    ccall((:av_next_option,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{AVOption}),obj,last)
end
function av_opt_show2(_obj::Ptr,_av_log_obj::Ptr,_req_flags::Integer,_rej_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    av_log_obj = convert(Ptr{Void},_av_log_obj)
    req_flags = int32(_req_flags)
    rej_flags = int32(_rej_flags)
    ccall((:av_opt_show2,libavutil),Cint,(Ptr{Void},Ptr{Void},Cint,Cint),obj,av_log_obj,req_flags,rej_flags)
end
function av_opt_set_defaults(_s::Ptr)
    s = convert(Ptr{Void},_s)
    ccall((:av_opt_set_defaults,libavutil),Void,(Ptr{Void},),s)
end
function av_opt_set_defaults2(_s::Ptr,_mask::Integer,_flags::Integer)
    s = convert(Ptr{Void},_s)
    mask = int32(_mask)
    flags = int32(_flags)
    ccall((:av_opt_set_defaults2,libavutil),Void,(Ptr{Void},Cint,Cint),s,mask,flags)
end
function av_set_options_string(_ctx::Ptr,_opts::Union(Ptr,ByteString),_key_val_sep::Union(Ptr,ByteString),_pairs_sep::Union(Ptr,ByteString))
    ctx = convert(Ptr{Void},_ctx)
    opts = convert(Ptr{Uint8},_opts)
    key_val_sep = convert(Ptr{Uint8},_key_val_sep)
    pairs_sep = convert(Ptr{Uint8},_pairs_sep)
    ccall((:av_set_options_string,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Ptr{Uint8}),ctx,opts,key_val_sep,pairs_sep)
end
function av_opt_set_from_string(_ctx::Ptr,_opts::Union(Ptr,ByteString),_shorthand::Ptr,_key_val_sep::Union(Ptr,ByteString),_pairs_sep::Union(Ptr,ByteString))
    ctx = convert(Ptr{Void},_ctx)
    opts = convert(Ptr{Uint8},_opts)
    shorthand = convert(Ptr{Ptr{Uint8}},_shorthand)
    key_val_sep = convert(Ptr{Uint8},_key_val_sep)
    pairs_sep = convert(Ptr{Uint8},_pairs_sep)
    ccall((:av_opt_set_from_string,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Ptr{Uint8}},Ptr{Uint8},Ptr{Uint8}),ctx,opts,shorthand,key_val_sep,pairs_sep)
end
function av_opt_free(_obj::Ptr)
    obj = convert(Ptr{Void},_obj)
    ccall((:av_opt_free,libavutil),Void,(Ptr{Void},),obj)
end
function av_opt_flag_is_set(_obj::Ptr,_field_name::Union(Ptr,ByteString),_flag_name::Union(Ptr,ByteString))
    obj = convert(Ptr{Void},_obj)
    field_name = convert(Ptr{Uint8},_field_name)
    flag_name = convert(Ptr{Uint8},_flag_name)
    ccall((:av_opt_flag_is_set,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Uint8}),obj,field_name,flag_name)
end
function av_opt_set_dict(_obj::Ptr,_options::Ptr)
    obj = convert(Ptr{Void},_obj)
    options = convert(Ptr{Ptr{AVDictionary}},_options)
    ccall((:av_opt_set_dict,libavutil),Cint,(Ptr{Void},Ptr{Ptr{AVDictionary}}),obj,options)
end
function av_opt_get_key_value(_ropts::Ptr,_key_val_sep::Union(Ptr,ByteString),_pairs_sep::Union(Ptr,ByteString),_flags::Integer,_rkey::Ptr,_rval::Ptr)
    ropts = convert(Ptr{Ptr{Uint8}},_ropts)
    key_val_sep = convert(Ptr{Uint8},_key_val_sep)
    pairs_sep = convert(Ptr{Uint8},_pairs_sep)
    flags = uint32(_flags)
    rkey = convert(Ptr{Ptr{Uint8}},_rkey)
    rval = convert(Ptr{Ptr{Uint8}},_rval)
    ccall((:av_opt_get_key_value,libavutil),Cint,(Ptr{Ptr{Uint8}},Ptr{Uint8},Ptr{Uint8},Uint32,Ptr{Ptr{Uint8}},Ptr{Ptr{Uint8}}),ropts,key_val_sep,pairs_sep,flags,rkey,rval)
end
function av_opt_eval_flags(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_flags_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    flags_out = convert(Ptr{Cint},_flags_out)
    ccall((:av_opt_eval_flags,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{Cint}),obj,o,val,flags_out)
end
function av_opt_eval_int(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_int_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    int_out = convert(Ptr{Cint},_int_out)
    ccall((:av_opt_eval_int,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{Cint}),obj,o,val,int_out)
end
function av_opt_eval_int64(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_int64_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    int64_out = convert(Ptr{Int64},_int64_out)
    ccall((:av_opt_eval_int64,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{Int64}),obj,o,val,int64_out)
end
function av_opt_eval_float(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_float_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    float_out = convert(Ptr{Cfloat},_float_out)
    ccall((:av_opt_eval_float,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{Cfloat}),obj,o,val,float_out)
end
function av_opt_eval_double(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_double_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    double_out = convert(Ptr{Cdouble},_double_out)
    ccall((:av_opt_eval_double,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{Cdouble}),obj,o,val,double_out)
end
function av_opt_eval_q(_obj::Ptr,_o::Ptr,_val::Union(Ptr,ByteString),_q_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    o = convert(Ptr{AVOption},_o)
    val = convert(Ptr{Uint8},_val)
    q_out = convert(Ptr{AVRational},_q_out)
    ccall((:av_opt_eval_q,libavutil),Cint,(Ptr{Void},Ptr{AVOption},Ptr{Uint8},Ptr{AVRational}),obj,o,val,q_out)
end
function av_opt_find(_obj::Ptr,_name::Union(Ptr,ByteString),_unit::Union(Ptr,ByteString),_opt_flags::Integer,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    unit = convert(Ptr{Uint8},_unit)
    opt_flags = int32(_opt_flags)
    search_flags = int32(_search_flags)
    ccall((:av_opt_find,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint,Cint),obj,name,unit,opt_flags,search_flags)
end
function av_opt_find2(_obj::Ptr,_name::Union(Ptr,ByteString),_unit::Union(Ptr,ByteString),_opt_flags::Integer,_search_flags::Integer,_target_obj::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    unit = convert(Ptr{Uint8},_unit)
    opt_flags = int32(_opt_flags)
    search_flags = int32(_search_flags)
    target_obj = convert(Ptr{Ptr{Void}},_target_obj)
    ccall((:av_opt_find2,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint,Cint,Ptr{Ptr{Void}}),obj,name,unit,opt_flags,search_flags,target_obj)
end
function av_opt_next(_obj::Ptr,_prev::Ptr)
    obj = convert(Ptr{Void},_obj)
    prev = convert(Ptr{AVOption},_prev)
    ccall((:av_opt_next,libavutil),Ptr{AVOption},(Ptr{Void},Ptr{AVOption}),obj,prev)
end
function av_opt_child_next(_obj::Ptr,_prev::Ptr)
    obj = convert(Ptr{Void},_obj)
    prev = convert(Ptr{Void},_prev)
    ccall((:av_opt_child_next,libavutil),Ptr{Void},(Ptr{Void},Ptr{Void}),obj,prev)
end
function av_opt_child_class_next(_parent::Ptr,_prev::Ptr)
    parent = convert(Ptr{AVClass},_parent)
    prev = convert(Ptr{AVClass},_prev)
    ccall((:av_opt_child_class_next,libavutil),Ptr{AVClass},(Ptr{AVClass},Ptr{AVClass}),parent,prev)
end
function av_opt_set(_obj::Ptr,_name::Union(Ptr,ByteString),_val::Union(Ptr,ByteString),_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    val = convert(Ptr{Uint8},_val)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint),obj,name,val,search_flags)
end
function av_opt_set_int(_obj::Ptr,_name::Union(Ptr,ByteString),val::Int64,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_int,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Int64,Cint),obj,name,val,search_flags)
end
function av_opt_set_double(_obj::Ptr,_name::Union(Ptr,ByteString),val::Cdouble,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_double,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cdouble,Cint),obj,name,val,search_flags)
end
function av_opt_set_q(_obj::Ptr,_name::Union(Ptr,ByteString),val::AVRational,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_q,libavutil),Cint,(Ptr{Void},Ptr{Uint8},AVRational,Cint),obj,name,val,search_flags)
end
function av_opt_set_bin(_obj::Ptr,_name::Union(Ptr,ByteString),_val::Union(Ptr,ByteString),_size::Integer,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    val = convert(Ptr{Uint8},_val)
    size = int32(_size)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_bin,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Ptr{Uint8},Cint,Cint),obj,name,val,size,search_flags)
end
function av_opt_set_image_size(_obj::Ptr,_name::Union(Ptr,ByteString),_w::Integer,_h::Integer,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    w = int32(_w)
    h = int32(_h)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_image_size,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Cint,Cint),obj,name,w,h,search_flags)
end
function av_opt_set_pixel_fmt(_obj::Ptr,_name::Union(Ptr,ByteString),fmt::AVPixelFormat,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_pixel_fmt,libavutil),Cint,(Ptr{Void},Ptr{Uint8},AVPixelFormat,Cint),obj,name,fmt,search_flags)
end
function av_opt_set_sample_fmt(_obj::Ptr,_name::Union(Ptr,ByteString),fmt::AVSampleFormat,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_sample_fmt,libavutil),Cint,(Ptr{Void},Ptr{Uint8},AVSampleFormat,Cint),obj,name,fmt,search_flags)
end
function av_opt_set_video_rate(_obj::Ptr,_name::Union(Ptr,ByteString),val::AVRational,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_video_rate,libavutil),Cint,(Ptr{Void},Ptr{Uint8},AVRational,Cint),obj,name,val,search_flags)
end
function av_opt_set_channel_layout(_obj::Ptr,_name::Union(Ptr,ByteString),ch_layout::Int64,_search_flags::Integer)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ccall((:av_opt_set_channel_layout,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Int64,Cint),obj,name,ch_layout,search_flags)
end
function av_opt_get(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_val::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_val = convert(Ptr{Ptr{Uint8}},_out_val)
    ccall((:av_opt_get,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{Ptr{Uint8}}),obj,name,search_flags,out_val)
end
function av_opt_get_int(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_val::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_val = convert(Ptr{Int64},_out_val)
    ccall((:av_opt_get_int,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{Int64}),obj,name,search_flags,out_val)
end
function av_opt_get_double(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_val::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_val = convert(Ptr{Cdouble},_out_val)
    ccall((:av_opt_get_double,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{Cdouble}),obj,name,search_flags,out_val)
end
function av_opt_get_q(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_val::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_val = convert(Ptr{AVRational},_out_val)
    ccall((:av_opt_get_q,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{AVRational}),obj,name,search_flags,out_val)
end
function av_opt_get_image_size(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_w_out::Ptr,_h_out::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    w_out = convert(Ptr{Cint},_w_out)
    h_out = convert(Ptr{Cint},_h_out)
    ccall((:av_opt_get_image_size,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{Cint},Ptr{Cint}),obj,name,search_flags,w_out,h_out)
end
function av_opt_get_pixel_fmt(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_fmt::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_fmt = convert(Ptr{AVPixelFormat},_out_fmt)
    ccall((:av_opt_get_pixel_fmt,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{AVPixelFormat}),obj,name,search_flags,out_fmt)
end
function av_opt_get_sample_fmt(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_fmt::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_fmt = convert(Ptr{AVSampleFormat},_out_fmt)
    ccall((:av_opt_get_sample_fmt,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{AVSampleFormat}),obj,name,search_flags,out_fmt)
end
function av_opt_get_video_rate(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_out_val::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    out_val = convert(Ptr{AVRational},_out_val)
    ccall((:av_opt_get_video_rate,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{AVRational}),obj,name,search_flags,out_val)
end
function av_opt_get_channel_layout(_obj::Ptr,_name::Union(Ptr,ByteString),_search_flags::Integer,_ch_layout::Ptr)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    search_flags = int32(_search_flags)
    ch_layout = convert(Ptr{Int64},_ch_layout)
    ccall((:av_opt_get_channel_layout,libavutil),Cint,(Ptr{Void},Ptr{Uint8},Cint,Ptr{Int64}),obj,name,search_flags,ch_layout)
end
function av_opt_ptr(_avclass::Ptr,_obj::Ptr,_name::Union(Ptr,ByteString))
    avclass = convert(Ptr{AVClass},_avclass)
    obj = convert(Ptr{Void},_obj)
    name = convert(Ptr{Uint8},_name)
    ccall((:av_opt_ptr,libavutil),Ptr{Void},(Ptr{AVClass},Ptr{Void},Ptr{Uint8}),avclass,obj,name)
end
function av_opt_freep_ranges(_ranges::Ptr)
    ranges = convert(Ptr{Ptr{AVOptionRanges}},_ranges)
    ccall((:av_opt_freep_ranges,libavutil),Void,(Ptr{Ptr{AVOptionRanges}},),ranges)
end
function av_opt_query_ranges(_arg1::Ptr,_obj::Ptr,_key::Union(Ptr,ByteString),_flags::Integer)
    arg1 = convert(Ptr{Ptr{AVOptionRanges}},_arg1)
    obj = convert(Ptr{Void},_obj)
    key = convert(Ptr{Uint8},_key)
    flags = int32(_flags)
    ccall((:av_opt_query_ranges,libavutil),Cint,(Ptr{Ptr{AVOptionRanges}},Ptr{Void},Ptr{Uint8},Cint),arg1,obj,key,flags)
end
function av_opt_query_ranges_default(_arg1::Ptr,_obj::Ptr,_key::Union(Ptr,ByteString),_flags::Integer)
    arg1 = convert(Ptr{Ptr{AVOptionRanges}},_arg1)
    obj = convert(Ptr{Void},_obj)
    key = convert(Ptr{Uint8},_key)
    flags = int32(_flags)
    ccall((:av_opt_query_ranges_default,libavutil),Cint,(Ptr{Ptr{AVOptionRanges}},Ptr{Void},Ptr{Uint8},Cint),arg1,obj,key,flags)
end
